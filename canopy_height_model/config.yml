# Canopy Height Deep Learning Component Configuration
# Author: Diego Bengochea

# Component metadata
component:
  name: "canopy_height_dl"
  version: "1.0.0"
  description: "Deep learning pipeline for canopy height estimation using Sentinel-2 and PNOA LiDAR"

# Model configuration
model:
  # Architecture
  model_type: 'unet'  # unet, deeplabv3+, etc.
  backbone: 'efficientnet-b4'
  
  # Input/output
  in_channels: 10  # Sentinel-2 bands
  num_outputs: 1   # Single channel height output
  
  # Data handling
  nan_value_target: -1.0
  nan_value_input: 0.0

# Training configuration
training:
  # Optimization
  lr: 0.0001
  batch_size: 32
  patch_size: 256
  max_epochs: 100
  patience: 15  # Early stopping patience

  log_steps: 200
  num_sanity_val_steps: 2
  val_check_interval: 1
  
  # Data augmentation
  augmentation_enabled: true
  
  # Splits
  split_ratios: [0.8,0.1,0.1]

  grid_size: 8
  
  # Hardware
  accelerator: 'mps'  # auto, gpu, cpu, mps
  devices: 1
  precision: 32

augmentation:
  # Height filtering
  max_height_threshold: 60.0  # Remove vegetation heights above this threshold
  
  # Geometric augmentation probabilities
  horizontal_flip_p: 0.5
  vertical_flip_p: 0.5
  rotation_degrees: 90.0
  rotation_p: 0.5
  
  # Intensity augmentations for Sentinel-2 imagery
  gaussian_noise_std: 0.02
  gaussian_noise_p: 0.3
  brightness_factor: 0.15
  brightness_p: 0.3
  contrast_factor: 0.15
  contrast_p: 0.3
  
  # PNOA mask augmentations
  mask_noise_std: 0.05
  mask_noise_p: 0.2

  # Loss function configuration
loss:
  # Range-aware loss parameters
  alpha: 0.5                   # Exponent for inverse frequency weighting (0=no weighting, 1=full inverse)
  max_height: 30.0             # Maximum height for range definitions in meters
  eps: 0.000001                   # Small constant for numerical stability
  weights: true                # Whether to apply range-specific weighting

optimizer:
  max_lr: 0.0002
  weight_decay: 0.01

scheduler:
  pct_start: 0.2
  div_factor: 15
  final_div_factor: 100 

prediction:
  tile_size: 6144               # Patch size for prediction (was PREDICTION_PATCH_SIZE)
  batch_size: 8                 # Batch size for prediction
  num_workers: 4                # Number of data loading workers

  output_dtype: 'float32'       # Output raster data type
  compress: 'lzw'               # Compression method
  tiled: true                   # Create tiled rasters for better performance
  
  inference_mode: true          # Use inference mode for memory efficiency
  enable_progress_bar: true     # Show progress during prediction

# Post-processing configuration
post_processing:
  # Step 1: Merge predictions
  merge:
    
    tile_size_km: 120  # 120km tiles
    compression: 'lzw'
    target_crs: 'EPSG:25830'
    nodata_value: -9999
    num_workers: 4
    
    # Year processing
    year_timestamps:
      2017: '2017-06-15'
      2018: '2018-06-15'
      2019: '2019-06-15'
      2020: '2020-06-15'
      2021: '2021-06-15'
      2022: '2022-06-15'
      2023: '2023-06-15'
      2024: '2024-06-15'
  
  # Step 2: Sanitize and interpolate
  sanitize:
    
    # Outlier detection
    outlier_detection: true
    height_min: 0.0
    height_max: 50.0
    zscore_threshold: 4.0
    
    # Temporal interpolation
    temporal_interpolation: true
    interpolation_method: 'linear'
    max_gap_years: 2
  
  # Step 3: Final mosaics
  final_merge:
    file_pattern: 'canopy_height_*_100m_sanitized.tif'
    
    # Downsampling
    target_resolution: 100  # meters
    resampling_method: 'bilinear'
    
    # Output format
    output_pattern: 'canopy_height_{year}_100m.tif'
    create_overview_pyramids: true

# Evaluation configuration
evaluation:
  # Metrics
  primary_metrics: ['mae', 'rmse', 'r2']
  height_range_analysis: true
  height_ranges: [[0, 2], [2, 6], [6, 10], [10, 20], [20, 50]]
  
  # Validation data
  validation_plots: true
  residual_analysis: true
  spatial_error_maps: true

# Logging configuration
logging:
  level: 'INFO'
  format: 'standard'
  log_file: null  # Set to path for file logging
  
  # MLflow integration
  mlflow_enabled: false
  mlflow_experiment_name: 'canopy_height_estimation'
  mlflow_tracking_uri: null

# Hardware and performance
compute:
  # Memory management
  num_workers: 4
  prefetch_factor: 2
  persistent_workers: true
  
  # Processing chunks
  chunk_size: 1024
  max_memory_gb: 32

# File patterns and naming
file_patterns:
  sentinel2_pattern: 'S2_summer_mosaic_*.tif'
  lidar_pattern: 'PNOA_*.tif'
  prediction_pattern: 'canopy_height_pred_*.tif'
  checkpoint_pattern: 'canopy_height_model_*.ckpt'

